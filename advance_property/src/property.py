'''
Created on 2015年4月13日

@author: zyl
'''

"""
Python 属性拦截技术：
1. __getattr__和__setattr__把未定义的属性获取和所有属性赋值指向通用的处理方法。
2. __getattribute__方法把所有属性获取都指向类中的一个泛型处理器方法。
3. property内置函数把特定属性访问定位到指定的get,set处理器函数。
4. 描述符协议，把特定属性访问定位到具有任意get和set处理方法的类的实例。

1). 特性
    特性协议允许我们把一个特定属性的get和set操作指向我们所提供的函数或方法，使得我
们能插入在属性访问的时候自动运行的代码，拦截属性的操作。
    一个特性管理一个单个的，特定的属性。
    通过property内置函数来创建特性并将其分配给类属性，就像方法函数一样，可以通过子
类和实例继承属性。它们的访问拦截功能通过self实例参数提供，该参数确保了在主体实例上访
问状态信息和类属性是可行的。

    特性的创建：
    attribute = property(fget, fset, fdel, doc)
    fget返回计算过的属性值,并且fset和fdel不返回什么（确切的说是返回None）。
"""



if __name__ == '__main__':
    pass